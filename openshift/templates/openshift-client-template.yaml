apiVersion: v1
kind: Template
labels:
  app: oauth-interface-client
  template: oauth-interface-client
metadata:
  annotations:
    description: Template to create project to use to interface with backend services.
    iconClass: icon-nodejs
    openshift.io/display-name: OpenShift Oauth Interface - Client
    openshift.io/documentation-url: https://github.com/devcomb/nginx-cfg
    openshift.io/long-description: This template defines resources needed to interface
      with server already running in another namespace. 
    openshift.io/provider-display-name: ''
    openshift.io/support-url: ''
    tags: nodejs,nginx,oauth,proxy
    template.openshift.io/bindable: 'false'
  name: oauth-interface-client
objects:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: nginx
    name: nginx
  spec:
    ports:
      - name: 8080-tcp
        port: 8080
        protocol: TCP
        targetPort: 8080
    selector:
      name: nginx
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: nodejs-theia
      template: nodejs-theia
    name: nodejs-theia-development
  spec:
    ports:
      - name: theia-dev
        port: 3000
        protocol: TCP
        targetPort: 3000
      - name: web-dev
        port: 8080
        protocol: TCP
        targetPort: 8080
    selector:
      name: nodejs-theia-development
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: webapp
      template: webapp
    name: webapp
  spec:
    ports:
      - name: web
        port: 8080
        protocol: TCP
        targetPort: 8080
    selector:
      name: webapp
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    openshift.io/host.generated: 'true'
    name: nginx
  spec:
    port:
      targetPort: 8080-tcp
    tls:
      termination: edge
    to:
      kind: Service
      name: nginx
    wildcardPolicy: None
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Nginx proxy with authentication based routing
      template.alpha.openshift.io/wait-for-ready: 'true'
    labels:
      app: nginx
      template: nginx
    name: nginx
  spec:
    replicas: 1
    selector:
      name: nginx
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          name: nginx
          deploymentconfig: nginx
      name: nginx
      spec:
        containers:
          - env:
              - name: WEBAPP_ADDR
                value: 'webapp:8080'
              - name: WEBAPP_DEV_ADDR
                value: 'nodejs-theia-development:8080'
              - name: IDE_ADDR
                value: 'nodejs-theia-development:3000'
              - name: GROUP_REQ
                value: developer
              - name: AUTH_HOST
                value: oauth-interface-nginx-okd-oauth.devcomb.com
              - name: GROUP_AUTH_HOST
                value: 'oauth-interface-nodejs-okd-oauth.devcomb.com:443'
            name: nginx
            ports:
              - containerPort: 8080
                protocol: TCP
            readinessProbe:
              exec:
                command:
                  - cat
                  - /tmp/health
              failureThreshold: 3
              initialDelaySeconds: 5
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 10
            resources:
              limits:
                cpu: 20m
                memory: 100Mi
    triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
            - nginx
          from:
            kind: ImageStreamTag
            name: 'nginx:latest'
        type: ImageChange
      - type: ConfigChange
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: 'true'
    labels:
      app: nodejs-theia
    name: nodejs-theia-development
  spec:
    replicas: 1
    selector:
      name: nodejs-theia-development
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          name: nodejs-theia-development
          deploymentconfig: nodejs-theia-development
      spec:
        containers:
          - env:
              - name: SEC_PROC
                value: 'false'
              - name: DEV_MODE
                value: 'true'
            imagePullPolicy: IfNotPresent
            name: nodejs-theia-development
            ports:
              - containerPort: 8080
                protocol: TCP
            resources:
              limits:
                cpu: 100m
                memory: 1Gi
        restartPolicy: Always
    triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
            - nodejs-theia-development
          from:
            kind: ImageStreamTag
            name: 'nodejs-theia-development:latest'
        type: ImageChange
      - type: ConfigChange
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: oauth-interface-client
    name: webapp
  spec:
    replicas: 1
    selector:
      deploymentconfig: webapp
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          app: webapp
          deploymentconfig: webapp
      spec:
        containers:
          - imagePullPolicy: Always
            name: webapp
            ports:
              - containerPort: 8080
                protocol: TCP
    triggers:
      - imageChangeParams:
          automatic: true
          containerNames:
            - webapp
          from:
            kind: ImageStreamTag
            name: 'webapp:latest'
        type: ImageChange
      - type: ConfigChange
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: 'true'
    labels:
      app: webapp
      template: webapp
    name: webapp
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: 'webapp:latest'
    postCommit:
      script: npm test
    resources: {}
    runPolicy: Serial
    source:
      git:
        ref: ${WEBAPP_GIT_BRANCH}
        uri: "${WEBAPP_GIT_URL}"
      type: Git
    strategy:
      sourceStrategy:
        env:
          - name: NPM_MIRROR
        forcePull: true
        from:
          kind: DockerImage
          name: 'docker.io/centos/nodejs-8-centos7:latest'
      type: Source
    triggers:
      - type: ConfigChange
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: 'true'
    labels:
      app: nodejs-theia
      template: nodejs-theia
    name: nodejs-theia-development
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: 'nodejs-theia-development:latest'
    source:
      git:
        ref: ${DEV_WEBAPP_GIT_BRANCH}
        uri: "${DEV_WEBAPP_GIT_URL}"
      type: Git
    strategy:
      sourceStrategy:
        env:
          - name: GIT_REPO_REF
            value: ${DEV_WEBAPP_GIT_BRANCH}
          - name: NPM_MIRROR
          - name: DEV_MODE
            value: 'true'
          - name: GIT_USERNAME
            value: ${DEV_WEBAPP_GIT_USERNAME}
          - name: GIT_EMAIL
            value: ${DEV_WEBAPP_GIT_EMAIL}
          - name: GIT_TOKEN
            value: ${DEV_WEBAPP_GIT_TOKEN}
        forcePull: true
        from:
          kind: DockerImage
          name: 'docker.io/devcomb/theia-openshift:latest'
      type: Source
    triggers:
      - type: ConfigChange
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      app: nginx
    name: nginx
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: 'nginx:latest'
    source:
      git:
        ref: development
        uri: 'https://github.com/devcomb/nginx-ex.git'
      type: Git
    strategy:
      sourceStrategy:
        env:
          - name: NGINX_CLIENT
            value: 'true'
        from:
          kind: ImageStreamTag
          name: 'nginx:1.12'
          namespace: openshift
      type: Source
    triggers:
      - type: ConfigChange
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    generation: 1
    name: nginx
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    generation: 1
    name: nodejs-theia-development
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    generation: 1
    name: webapp
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    name: group-reader
  rules:
    - apiGroups:
        - rbac.authorization.k8s.io
      resources:
        - rolebindings
      verbs:
        - get
        - watch
        - list
    - apiGroups:
        - authorization.openshift.io
      resources:
        - rolebindings
      verbs:
        - get
        - watch
        - list
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    name: developer
  rules:
  - apiGroups:
      - ''
    resources:
      - pods
    verbs:
      - get
      - watch
      - list

parameters:
  - description: Webapp git url.
    displayName: webappgiturl
    name: WEBAPP_GIT_URL
    required: true
    value: 'https://github.com/sclorg/nodejs-ex.git'
  - description: Webapp git branch.
    displayName: webappgitbranch
    name: WEBAPP_GIT_BRANCH
    required: true
    value: 'master'
  - description: Development webapp git url.
    displayName: dev_webappgiturl
    name: DEV_WEBAPP_GIT_URL
    required: true
    value: 'https://github.com/sclorg/nodejs-ex.git'
  - description: Development webapp git branch.
    displayName: dev_webappgitbranch
    name: DEV_WEBAPP_GIT_BRANCH
    required: true
    value: 'master'
  - description: Github authentication token for repo push.
    displayName: dev_webappgittoken
    name: DEV_WEBAPP_GIT_TOKEN
    required: false
    value: ''
  - description: Github authentication email for repo push.
    displayName: dev_webappgitemail
    name: DEV_WEBAPP_GIT_EMAIL
    required: false
    value: ''