server {
  listen 127.0.0.1:4180 default_server;
  server_name ${REMOTE_WEBAPP_HOST};
  location / {
    proxy_pass https://${REMOTE_WEBAPP_HOST};
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $proxy_host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;    
    add_header X-debug-header "host=$host proxy_host=$proxy_host http_host=$http_host;" always;
  }
}

server {
  listen 127.0.0.1:4181 default_server;
  server_name ${AUTH_HOST};
  location / {
    proxy_pass https://${AUTH_HOST}/oauth/auth;
    proxy_set_header Host $proxy_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Real-Host $http_x_forwarded_host;
    proxy_set_header X-Scheme $scheme;
    proxy_set_header Content-Length   "";
    proxy_pass_request_body           off;
    proxy_connect_timeout 1;
    proxy_send_timeout 30;
    proxy_read_timeout 30;
    add_header X-auth-request-email $http_x_auth_request_email;
    add_header X-auth-request-user $http_x_auth_request_user;
    add_header X-debug-header "AUTH_HOST=${AUTH_HOST} host=$host proxy_host=$proxy_host http_host=$http_host;" always;
    error_log /dev/stdout debug;
    error_page 302 = @handle_redirect;
  }
  location @handle_redirect {
  error_log /dev/stdout debug;
    add_header X-auth-request-email $http_x_auth_request_email;
    add_header X-auth-request-user $http_x_auth_request_user;
    add_header X-debug-header "@handle_redirect http_x_auth_request_email=$http_x_auth_request_email host=$host proxy_host=$proxy_host http_host=$http_host;" always;
    set $saved_redirect_location '$upstream_http_location';
    proxy_pass $saved_redirect_location;
  }
}

server {
  listen 127.0.0.1:4182 default_server;
  server_name ${AUTH_HOST};
    location ~ ^/(.*)$  {
      proxy_pass https://${AUTH_HOST}/$1$is_args$args;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header X-Real-Host $http_x_forwarded_host;
      proxy_set_header Host $proxy_host;   
      add_header X-debug-header "__1__is_args__args=$1$is_args$args http_x_forwarded_host=$http_x_forwarded_host host=$host proxy_host=$proxy_host http_host=$http_host;" always;
    }
}

server {
  listen 127.0.0.1:4183 default_server;
    server_name groups;
    location = /oauth/auth {
        internal;
        proxy_pass https://${AUTH_HOST}/oauth/auth;
        proxy_cookie_path off;
        proxy_set_header Host $proxy_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Real-Host $http_x_forwarded_host;
        proxy_set_header X-Scheme $scheme;
        proxy_set_header Content-Length   "";
        proxy_pass_request_body           off;
        proxy_connect_timeout 1;
        proxy_send_timeout 30;
        proxy_read_timeout 30;
        add_header X-auth-request-email $http_x_auth_request_email;
        add_header X-auth-request-user $http_x_auth_request_user;
        add_header X-debug-header "AUTH_HOST=${AUTH_HOST} host=$host proxy_host=$proxy_host http_host=$http_host;" always;
        error_log /dev/stdout debug;
        error_page 302 = @handle_redirect;
    }
    location @handle_redirect {
        error_log /dev/stdout debug;
        add_header X-auth-request-email $http_x_auth_request_email;
        add_header X-auth-request-user $http_x_auth_request_user;
        add_header X-debug-header "@handle_redirect http_x_auth_request_email=$http_x_auth_request_email host=$host proxy_host=$proxy_host http_host=$http_host;" always;
        set $saved_redirect_location '$upstream_http_location';
        proxy_pass $saved_redirect_location;
    }
    location /  {  
      auth_request /oauth/auth;
      proxy_cookie_path off;
      error_log /dev/stdout debug;
      proxy_pass http://${GROUP_AUTH_HOST}/;
      #proxy_pass_request_headers on;
      proxy_set_header Host $proxy_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Real-Host $http_x_forwarded_host;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header Content-Length   "";
      proxy_pass_request_body           off;
      add_header X-auth-request-email $http_x_auth_request_email;
      add_header X-auth-request-user $http_x_auth_request_user;
      add_header X-test 'test';
      auth_request_set $email $upstream_http_x_auth_request_email;
      auth_request_set $user $upstream_http_x_auth_request_user;
      add_header X-Debug-User-Email $upstream_http_X_debug_user_email;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      #proxy_set_header X-subject "/oauth/groups groups=$groups ide=$ide email=$email host=$host proxy_host=$proxy_host http_host=$http_host http_X_test=$http_X_test http_x_test=$http_x_test http_x_subject=$http_x_subject upstream_http_X_subject=$upstream_http_X_subject ";
      proxy_set_header X-subject $email;
      proxy_set_header X-subject-group '${GROUP_REQ}';
      proxy_set_header X-namespace '${NAMESPACE}';
      proxy_set_header X-oauth-host '${OS_CONSOLE_HOST}';
      proxy_set_header X-oauth-port '${OS_CONSOLE_PORT}';
      proxy_set_header Authorization 'Bearer ${SA_TOKEN}';
      proxy_set_header Host $proxy_host;
      add_header X-debug-header "/oauth/auth host=$host proxy_host=$proxy_host http_host=$http_host;" always;
    }
}